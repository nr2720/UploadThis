generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model days {
  id       Int       @id @default(autoincrement())
  user_id  Int?
  date     DateTime? @db.Date
  exercise String?
  weight   Int?
  reps     Int?
  users    users?    @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model pr {
  id       Int    @id @default(autoincrement())
  user_id  Int?
  squat    Int?
  bench    Int?
  deadlift Int?
  users    users? @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model secretposts {
  id          Int          @id @default(autoincrement())
  title       String?      @db.VarChar(255)
  text        String?
  date        DateTime?    @db.Date
  user_id     Int?
  secretusers secretusers? @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model secretusers {
  id          Int           @id @default(autoincrement())
  name        String?       @db.VarChar(255)
  lastname    String?       @db.VarChar(255)
  email       String?       @db.VarChar(255)
  password    String?       @db.VarChar(255)
  username    String?       @unique @db.VarChar(255)
  country     String?       @db.VarChar(255)
  secretposts secretposts[]
  files files[] // This will establish the one-to-many relationship
  folders folders[]
}

model users {
  id        Int     @id @default(autoincrement())
  username  String? @db.VarChar(255)
  firstname String? @db.VarChar(255)
  lastname  String? @db.VarChar(255)
  age       Int?
  height    Int?
  weight    Int?
  password  String? @db.VarChar(255)
  days      days[]
  pr        pr[]
}

model files {
  id        Int          @id @default(autoincrement())
  file_name String?      @db.VarChar(255)
  file_size Int?
  md5_hash  String?      @db.VarChar(255)
  mime_type String?      @db.VarChar(255)
  cloud_url String? 
  cloud_id  String?
  user_id   Int?
  folder_id Int?
  folders   folders? @relation(fields: [folder_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  user      secretusers? @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}


model folders {
  id        Int          @id @default(autoincrement())
  folder_name String?      @db.VarChar(255)
  files files[]
  user_id   Int?
  user      secretusers? @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}